<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>mockapp-parent</artifactId>
        <groupId>org.vaadin.maven.mockapp</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>mockapp-server</artifactId>
    <name>Server Module for Development</name>
    <packaging>war</packaging>

    <dependencies>
        <!--
           Example of importing an add-on from Vaadin Directory
        -->
        <dependency>
            <groupId>org.vaadin.addons</groupId>
            <artifactId>qrcode</artifactId>
            <version>2.0.1</version>
        </dependency>

        <!--
            Custom components
        -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mockapp-client</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--
            Other dependencies
        -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.3</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <configuration>
                    <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                    <webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
                    <draftCompile>true</draftCompile>
                    <compileReport>true</compileReport>
                    <style>OBF</style>
                    <strict>true</strict>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>update-widgetset</goal>
                            <goal>resources</goal>
                            <goal>compile</goal>
                            <!--
                                Even though the Vaadin sevlet will compile the theme to CSS during development mode,
                                we explicitly do it here as well to make it easier to assemble the production build.
                                Remember to exclude the generated styles.css file from your version control system.
                              -->
                            <goal>compile-theme</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <!--
                        By attaching the classes to a separate JAR, we can import them directly in the production
                        overlay project, making it easier to compile a separate widgetset for production mode.
                      -->
                    <attachClasses>true</attachClasses>
                    <!--
                        Exclude some unnecessary files generated by the GWT compiler.
                      -->
                    <packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
                        WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**
                    </packagingExcludes>
                </configuration>
            </plugin>
            <!--
                The Jetty plugin allows us to easily test the development build by running jetty:run on the command line.
              -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
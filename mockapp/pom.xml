<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>mockapp-parent</artifactId>
        <groupId>org.vaadin.maven.mockapp</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>mockapp</artifactId>
    <name>Server Overlay Module for Production</name>
    <packaging>war</packaging>

    <dependencies>
        <!--
            Include the WAR-module as an overlay.
          -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mockapp-server</artifactId>
            <version>${project.version}</version>
            <type>war</type>
            <scope>runtime</scope>
        </dependency>
        <!--
            Also include the compiled classes as a provided dependency so that the GWT compiler can pick up
            all the GWT modules.
          -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mockapp-server</artifactId>
            <version>${project.version}</version>
            <classifier>classes</classifier>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <configuration>
                    <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                    <webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
                    <draftCompile>false</draftCompile>
                    <compileReport>true</compileReport>
                    <style>OBF</style>
                    <strict>true</strict>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>update-widgetset</goal>
                            <goal>resources</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <!--
                        Exclude the compiled widgetset from the development mode WAR-file; we want to use our own.
                      -->
                    <overlays>
                        <overlay>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>mockapp-server</artifactId>
                            <excludes>
                                <exclude>WEB-INF/classes/VAADIN/widgetsets/**</exclude>
                            </excludes>
                        </overlay>
                    </overlays>
                    <!--
                        Exclude some unnecessary files generated by the GWT compiler.
                      -->
                    <packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
                        WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**
                    </packagingExcludes>
                </configuration>
            </plugin>
            <!--
                The Jetty plugin allows us to easily test the production build by running jetty:run on the command line.
              -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
        	<plugins>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>com.vaadin</groupId>
        								<artifactId>
        									vaadin-maven-plugin
        								</artifactId>
        								<versionRange>
        									[7.1.11,)
        								</versionRange>
        								<goals>
        									<goal>
        										update-widgetset
        									</goal>
        									<goal>resources</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
    </build>

</project>